# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do

  desc "Run code analysis"
  lane :analyse do
    gradle(task: "multiModuleDetekt")
  end

  desc "Assemble the DevBlackDebug apk"
  lane :assembleDevBlackDebug do
    gradle(task: ":app:assembleDevBlackDebug")
  end

  desc "Assemble the DevBlackRelease apk"
  lane :assembleDevBlackRelease do
    gradle(task: ":app:assembleDevBlackRelease")
  end

  desc "Assemble the AlphaProdDebug apk"
  lane :assembleAlphaProdDebug do
    gradle(task: ":app:assembleAlphaProdDebug")
  end

  desc "Assemble the AlphaProdRelease apk"
  lane :assembleAlphaProdRelease do
    gradle(task: ":app:assembleAlphaProdRelease")
  end

  desc "Assemble the PlayProdDebug apk"
  lane :assemblePlayProdDebug do
    gradle(task: ":app:assemblePlayProdDebug")
  end

  desc "Assemble the PlayBlackRelease apk"
  lane :assemblePlayBlackRelease do
    gradle(task: ":app:assemblePlayBlackRelease")
  end

  desc "Creates the PlayProdRelease bundle"
  lane :bundlePlayProdRelease do
    gradle(task: ":app:bundlePlayProdRelease")
  end

  desc "Assemble the androidTest apks"
  lane :assembleDebugAndroidTest do
    gradle(task: "assembleDebugAndroidTest")
  end

  desc "Run Unit tests"
  lane :unitTests do
    gradle(task: "testDebugUnitTest")
    gradle(task: "testDevDebugUnitTest")
  end

  desc "Verify screenshot tests"
  lane :verifyScreenshotTests do
    gradle(task: "verifyPaparazziDevDebug")
  end

  desc "Run instrumentation tests"
  lane :instrumentationTests do
    sh("../scripts/ci/installFirebase.sh")
    sh("../scripts/ci/setupGoogleJson.sh")
    sh("../scripts/ci/setupGoogleCloud.sh")
    sh("../scripts/launchFirebaseInstrumentedTests.sh")
  end

  desc "Publish dev build to firebase group"
  lane :deployToFirebaseDevGroup do
    sh("../scripts/ci/installFirebase.sh")
    sh("../scripts/ci/setupGoogleJson.sh")
    sh("../scripts/uploadApkToFirebase.sh devBlack")
  end

  desc "Publish alpha build to firebase group"
  lane :deployToFirebaseAlphaGroup do
    sh("../scripts/ci/installFirebase.sh")
    sh("../scripts/ci/setupGoogleJson.sh")
    sh("../scripts/uploadApkToFirebase.sh alphaProd")
  end

  desc "Publish prod black build to firebase group"
  lane :deployToFirebaseProdGroup do
    sh("../scripts/ci/installFirebase.sh")
    sh("../scripts/ci/setupGoogleJson.sh")
    sh("../scripts/uploadApkToFirebase.sh playBlack")
  end

  desc "Publish internal prod bundle"
  lane :deployToPlayInternal do
     upload_to_play_store(
       json_key: './tmp/play-service-account.json',
       track: 'internal',
       release_status: 'draft',
       aab: './app/build/outputs/bundle/playProdRelease/app-play-prod-release.aab'
     )
  end
end
